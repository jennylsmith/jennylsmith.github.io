name: quarto website

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the specified branches
  push:
    branches: [ "main", "dev", "pr_actions_test", "dev_pr_test"]
  # pull_request:
  #   branches: [ "main", "dev" ]

  # # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# Debugging log info
# https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/troubleshooting-workflows/enabling-debug-logging

# temporarily use conditional statement to skip PR while troubleshooting
# env: A map of variables that are available to the steps of all jobs in the workflow. 
    # The env context contains variables that have been set in a workflow, job, or step.
# env:
#   RUN_PR_STEP: "${{ false }}"

# The vars context contains custom configuration variables set at the organization, repository, and environment levels. 
# repository or environment variables can be set on Github or the GH Actions extension in VSCode
# https://github.com/jennylsmith/jennylsmith.github.io/settings/variables/actions
# if statements can only access thse expression contexts: github, inputs, vars, needs

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      QUARTO_VERSION: 1.5.57
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # install quarto
      - name: install quarto CLI
        run: |
          wget -O ${{ runner.temp }}/quarto.deb https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/quarto.deb
      
      # checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout  
        uses: actions/checkout@v4
      
      # setup gh pages
      - name: setup pages
        id: pages
        uses: actions/configure-pages@v5
      
      # render the website 
      - name: render website
        run: quarto render
        
      # upload the rendered website (artifact)
      - name: upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # pull request
  # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs
  pull_request:
    if: ${{ vars.RUN_PR_STEP == true }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          oken: ${{ secrets.PAT }}
          repository: jennylsmith/jennylsmith.github.io
        
      - name: create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "merge dev into main"
          base: pr_actions_test 
          branch: dev_pr_test
          draft: always-true
          assignees: jennylsmith
          reviewers: jennylsmith
        
  # deploy job
  deploy:
    # Add a dependency to the job
    needs: build
    # add and if statement later? ${{ github.event.repository.default_branch }}
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner
    runs-on: ubuntu-latest
    # deploy to gh pages
    steps:
      - name: deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v4
