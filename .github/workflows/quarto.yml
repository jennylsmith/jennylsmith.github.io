name: quarto-website

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the specified branches
  push:
    branches: [ "main", "dev", "main_pr_test", "dev_pr_test"]
  # ready_for_review:
  #   ["main", "dev", "pr_actions_test", "dev_pr_test"]
  # pull_request:
  #   branches: [ "main", "dev" ]

  # Allows you to run this workflow manually from the Actions tab or gh CLI
  workflow_dispatch:

# Debugging log info
# https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/troubleshooting-workflows/enabling-debug-logging

# temporarily use conditional statement to skip PR while troubleshooting
# env: A map of variables that are available to the steps of all jobs in the workflow. 
    # The env context contains variables that have been set in a workflow, job, or step.
# env:
#   RUN_PR_STEP: "${{ false }}"

# The vars context contains custom configuration variables set at the organization, repository, and environment levels. 
# repository or environment variables can be set on Github or the GH Actions extension in VSCode
# https://github.com/jennylsmith/jennylsmith.github.io/settings/variables/actions
# if statements can only access thse expression contexts: github, inputs, vars, needs

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      QUARTO_VERSION: 1.5.57
      OUTPUT_DIR: docs
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout  
        uses: actions/checkout@v4
    
      # setup gh pages
      - name: setup pages
        id: pages
        uses: actions/configure-pages@v5
      
      # cache rendered website artifacts
      - name: Cache Artifacts
        id: cache-artifacts
        uses: actions/cache@v4
        with:
          path: ${{ env.OUTPUT_DIR }}
          key: ${{ hashFiles('**/$OUTPUT_DIR') }}-key

      - name: check outputs
        run: |
          echo the cache hit output is: ${{ steps.cache-artifacts.outputs.cache-hit }}

      # install quarto
      - name: install quarto CLI
        if: steps.cache-artifacts.outputs.cache-hit != 'true'
        run: |
          wget -O ${{ runner.temp }}/quarto.deb https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/quarto.deb
      
      # render the website 
      - name: render website
        if: steps.cache-artifacts.outputs.cache-hit != 'true'
        run: quarto render
        
      # upload the rendered website (artifact)
      - name: upload artifact
        id: artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUTPUT_DIR }}
      
      # - name: generate cache key 
      #   if: steps.cache-artifacts.outputs.cache-hit != 'true'
      #   id: cache-key
      #   run: echo ${{ steps.artifact.outputs.artifact_id }} > ./$OUTPUT_DIR/${{ steps.artifact.outputs.artifact_id }}-key
      

  # pull request
  # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs
  # pull_request:
  #   if: ${{ github.ref_name == 'dev_pr_test' }}
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: dev
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ssh-key: ${{ secrets.SSH_WEBSITE_KEY }}
  #         ref: main_pr_test
  #     - name: gh-cli-auth
  #       run: gh --version
      # - name: gh-cli-pr
      #   run:

      # - name: create-pull-request
      #   id: cpr
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     commit-message: merge dev into main
      #     title: PR from ${{ github.run_id }}
      #     draft: always-true
      #     branch: ${{ github.ref }}

  # deploy job
  deploy:
    if: ${{ github.ref_name == 'main' }}
    # Add a dependency to the job
    needs: build
    # define env vars
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#default-environment-variables
    # default env vars are not accessible through the env context
    env:
      ACTIONS_RUNNER_DEBUG: true
    # Deploy to the github-pages environment
    # Settings and variables here: https://github.com/jennylsmith/jennylsmith.github.io/settings/environments
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: dev
    # Specify runner
    runs-on: ubuntu-latest
    # deploy to gh pages
    steps:
      - name: "vars example"
        run: |
          echo "the gh branch that triggered the workflow is $GITHUB_REF_NAME"
          echo "debug set to $ACTIONS_RUNNER_DEBUG"
      # - name: deploy to GitHub pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
